@model MODELS.NGHIEPVU.MODELParking
@{
    ViewData["Title"] = "PopupDetail";
}
<head>
    
<script src='https://cdn.jsdelivr.net/npm/@@goongmaps/goong-js@1.0.9/dist/goong-js.js'></script>
<link href='https://cdn.jsdelivr.net/npm/@@goongmaps/goong-js@1.0.9/dist/goong-js.css' rel='stylesheet' />
<script src="https://cdn.jsdelivr.net/npm/@@goongmaps/goong-geocoder@1.1.1/dist/goong-geocoder.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/@@goongmaps/goong-geocoder@1.1.1/dist/goong-geocoder.css" rel="stylesheet" />
<link rel="stylesheet" href="~/Website/style.css" /> 

</head>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmProduct", @class = "forms-sample" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id, new { id = "Id" })
    <div class="modal-header">
        <h4 class="modal-title" id="exampleModalLabel">Thêm mới bãi đậu xe</h4>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="closePopUp()"></button>
    </div>
    <div class="modal-body">
        <div class="form-group">
            <!-- Row 1: Parking Code và Name -->
            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label class="col-form-label">
                            Mã bãi đậu xe
                        </label>
                        @Html.TextBoxFor(model => model.ParkingCode, new { @class = "form-control", id = "ParkingCode" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label class="col-form-label">
                            Tên bãi đậu xe
                        </label>
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", id = "Name" })
                    </div>
                </div>
            </div>

            <!-- Row 2: Latitude và Longitude -->
            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label class="col-form-label">
                            Vĩ độ
                        </label>
                        @Html.TextBoxFor(model => model.Latitude, new { @class = "form-control", id = "Latitude", @readonly = "readonly" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label class="col-form-label">
                            Kinh độ
                        </label>
                        @Html.TextBoxFor(model => model.Longitude, new { @class = "form-control", id = "Longitude", @readonly = "readonly" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 text-end">
                    <button type="button" class="btn btn-primary" id="selectLocationButton">Chọn vị trí từ bản đồ</button>
                </div>
            </div>


            <!-- Row 3: Zip Code và Image -->
            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label class="col-form-label">
                            Mã zip
                        </label>
                        @Html.TextBoxFor(model => model.ZipCode, new { @class = "form-control", id = "ZipCode" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label class="col-form-label">
                            Hình ảnh
                        </label>
                        <input class="form-control" type="file" id="formFile">
                    </div>
                </div>
            </div>

            <!-- Row 4: Address và District -->
            <div class="row">
                <div class="col-md-12">
                    <div class="mb-3">
                        <label class="col-form-label">
                            Địa chỉ
                        </label>
                        @Html.TextBoxFor(model => model.Address, new { @class = "form-control", id = "Address" })
                    </div>
                </div               
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="mb-3">
                        <label class="col-form-label">
                            Tỉnh / Thành Phố
                        </label>
                        @Html.TextBoxFor(model => model.Address, new { @class = "form-control", id = "Address" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="mb-3">
                        <label class="col-form-label">
                            Quận / Huyện
                        </label>
                        @Html.TextBoxFor(model => model.District, new { @class = "form-control", id = "District" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="mb-3">
                        <label class="col-form-label">
                            Phường / Xã
                        </label>
                        @Html.TextBoxFor(model => model.Ward, new { @class = "form-control", id = "Ward" })
                    </div>
                </div>
            </div>

            <!-- Row 5: Province và Total Slots -->
            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label class="col-form-label">
                            Tổng số chỗ
                        </label>
                        @Html.TextBoxFor(model => model.TotalSlots, new { @class = "form-control", id = "TotalSlots", type = "number" })
                    </div>
                </div>
            </div>

            <!-- Row 6: Description -->
            <div class="row">
                <div class="col-md-12">
                    <div class="mb-3">
                        <label class="col-form-label">
                            Mô tả
                        </label>
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", id = "Description", rows = 3 })
                    </div>
                </div>
            </div>

            <!-- Row 7: Open Time và Close Time -->
            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label class="col-form-label">
                            Giờ mở cửa
                        </label>
                        @Html.TextBoxFor(model => model.OpenTime, new { @class = "form-control", id = "OpenTime", type = "time" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label class="col-form-label">
                            Giờ đóng cửa
                        </label>
                        @Html.TextBoxFor(model => model.CloseTime, new { @class = "form-control", id = "CloseTime", type = "time" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal-footer">
        <button type="submit" id="btnLuu" class="btn btn-success"><i class="fas fa-check-square"></i> Lưu</button>
        <button type="button" class="btn btn-danger" data-bs-dismiss="modal" onclick="closePopUp()">Đóng</button>
    </div>
}


<!-- Modal Bootstrap -->
<div class="modal fade" id="mapModal" tabindex="-1" aria-labelledby="mapModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="mapModalLabel">Chọn vị trí trên bản đồ</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="map">
                    <div id="left" class="sidebar left collapsed sidebar-map">
                        <h4 class="sidebar-title">Thông tin vị trí</h4>
                        <div class="sidebar-info">
                            <div class="coordinates">
                                <div class="coordinate-item">
                                    <span class="label">Latitude (Vĩ độ):</span>
                                    <span class="value">10.945273</span>
                                </div>
                                <div class="coordinate-item">
                                    <span class="label">Longitude (Kinh độ):</span>
                                    <span class="value">106.824964</span>
                                </div>
                            </div>
                            <div class="address">
                                <p class="address-title">Địa chỉ:</p>
                                <ul>
                                    <li><strong>Tỉnh/Thành phố:</strong> <span>Đồng Nai</span></li>
                                    <li><strong>Quận/Huyện:</strong> <span>Biên Hòa</span></li>
                                    <li><strong>Phường/Xã:</strong> <span>Trảng Dài</span></li>
                                </ul>
                            </div>
                        </div>
                        <div class="sidebar-toggle rounded-rect left" onclick="toggleSidebar('left')">
                            &rarr;
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" id="confirmLocation">Xác nhận vị trí</button>
            </div>
        </div>
    </div>
</div>






<script>
    

    


// Map initialization
goongjs.accessToken = 'yIjIEaQWjb9xRhAcXW7T1ilJSTjmoAFl1u4XjKSH';
const map = new goongjs.Map({
    container: 'map',
    style: 'https://tiles.goong.io/assets/goong_map_web.json',
    center: [106.824964, 10.945273],
    zoom: 13
});


// Resize map after modal is shown
const mapModal = document.getElementById('mapModal');
mapModal.addEventListener('shown.bs.modal', () => {
    map.resize(); // Cập nhật kích thước bản đồ
});


// Function to get user's current location and move the map
function getCurrentLocationAndMoveMap() {
    if ("geolocation" in navigator) {
        navigator.geolocation.getCurrentPosition(
            (position) => {
                const userLat = position.coords.latitude;
                const userLng = position.coords.longitude;

                // Fly the map to the user's location
                map.flyTo({
                    center: [userLng, userLat],
                    zoom: 15, // Adjust zoom level for better view
                    speed: 1.5, // Animation speed
                    curve: 1, // Animation curve
                });

                console.log(`User's location: Latitude ${userLat}, Longitude ${userLng}`);
            },
            (error) => {
                console.error("Error getting location: ", error);
                alert("Không thể lấy được vị trí của bạn. Vui lòng kiểm tra cài đặt trình duyệt.");
            }
        );
    } else {
        alert("Trình duyệt của bạn không hỗ trợ chức năng định vị.");
    }
}

// Add event listener to automatically get the user's location when modal is shown
document.getElementById('mapModal').addEventListener('shown.bs.modal', () => {
    getCurrentLocationAndMoveMap();
});



// Add map controls
map.addControl(new goongjs.NavigationControl(), 'top-right');
map.addControl(new goongjs.FullscreenControl(), 'top-right');

// Initialize geocoder
const geocoder = new GoongGeocoder({
    accessToken: 'KYkkudSdfBH0NAtFwoHDGFiel5w83BaSaGgevbCW',
    goongjs: goongjs
});
document.getElementById('geocoder').appendChild(geocoder.onAdd(map));



// Sidebar toggle function
function toggleSidebar(id) {
    const elem = document.getElementById(id);
    const toggleIcon = elem.querySelector('.bi');
    const collapsed = elem.classList.contains('collapsed');

    if (collapsed) {
        elem.classList.remove('collapsed');
        toggleIcon.classList.remove('bi-arrow-left');
        toggleIcon.classList.add('bi-arrow-right');
    } else {
        elem.classList.add('collapsed');
        toggleIcon.classList.remove('bi-arrow-right');
        toggleIcon.classList.add('bi-arrow-left');
    }
}

// Thêm biến để lưu marker hiện tại ở đầu file script
let currentMarker = null;

// Sửa lại sự kiện click vào map
map.on('click', function (e) {
    // Lấy tọa độ điểm được click
    const coordinates = e.lngLat;

    // Xóa marker cũ nếu có
    if (currentMarker) {
        currentMarker.remove();
    }

    // Tạo marker mới và lưu lại
    currentMarker = new goongjs.Marker()
        .setLngLat(coordinates)
        .addTo(map);

    // Gọi API reverse geocoding để lấy thông tin địa điểm
    fetch(`https://rsapi.goong.io/Geocode?latlng=${coordinates.lat},${coordinates.lng}&api_key=KYkkudSdfBH0NAtFwoHDGFiel5w83BaSaGgevbCW`)
        .then(response => response.json())
        .then(data => {
            if (data.results && data.results[0]) {
                const place = data.results[0];

                // Cập nhật thông tin trong sidebar
                // Viết mã để lấy ảnh từ goong ở bên trên thêm vào .place-details img
                document.querySelector('.place-title').textContent = place.formatted_address;
                document.querySelector('.place-info span').textContent = place.formatted_address;

                // Hiển thị sidebar
                const sidebar = document.getElementById('left');
                sidebar.classList.remove('collapsed');
                const toggleIcon = sidebar.querySelector('.bi');
                toggleIcon.classList.remove('bi-arrow-left');
                toggleIcon.classList.add('bi-arrow-right');
            }
        });
});



</script>



<script>
    // Khi nhấn nút "Chọn vị trí từ bản đồ"
    document.getElementById("selectLocationButton").addEventListener("click", function () {
        // Hiển thị modal với ID mapModal
        var mapModal = new bootstrap.Modal(document.getElementById("mapModal"));
        mapModal.show();
    });
</script>



